generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                  Int         @id @default(autoincrement())
  email               String      @unique
  name                String
  password            String
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @default(now())
  confirmationCode    String
  confirmed           Boolean     @default(false)
  favorites           favorites[]
  likes               likes[]
  posts               post[]
  followingCategories category[]  @relation("categoryTousers")
}

model category {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  imageUrl  String
  favorites favorites[]
  likes     likes[]
  posts     post[]
  followers users[]     @relation("categoryTousers")
}

model post {
  id         Int         @id @default(autoincrement())
  name       String
  fanArtUrl  String      @unique
  authorId   Int
  categoryId Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  favorites  favorites[]
  likes      likes[]
  author     users       @relation(fields: [authorId], references: [id])
  category   category    @relation(fields: [categoryId], references: [id])
}

model favorites {
  id         Int      @id @default(autoincrement())
  userId     Int
  postId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  categoryId Int
  category   category @relation(fields: [categoryId], references: [id])
  post       post     @relation(fields: [postId], references: [id])
  user       users    @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}

model likes {
  id         Int      @id @default(autoincrement())
  userId     Int
  postId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  categoryId Int
  category   category @relation(fields: [categoryId], references: [id])
  post       post     @relation(fields: [postId], references: [id])
  user       users    @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}
